/*
 * BackEnd
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
import { ApiClient } from "../ApiClient";
import { GetRoleDto } from "../model/GetRoleDto";


/**
* Role service.
* @module api/RoleApi
* @version v1
*/
export class RoleApi {
  /**
    * Constructs a new RoleApi. 
    * @alias module:api/RoleApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
  constructor(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;
  }

  /**
     * Callback function to receive the result of the apiRoleDelete operation.
     * @callback moduleapi/RoleApi~apiRoleDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

  /**
     * @param {Object} opts Optional parameters
     * @param {String} opts.name 
     * @param {module:api/RoleApi~apiRoleDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
  apiRoleDelete(
    opts,
    callbackRequest,
    callback,
    setErrorMess,
    setOpenErrorAlert
  ) {
    opts = opts || {};
    let postBody = null;

    let pathParams = {};
    let queryParams = {
      name: opts["name"],
    };
    let headerParams = {};
    let formParams = {};

    let authNames = [];
    let contentTypes = [];
    let accepts = [];
    let returnType = null;

    return this.apiClient.callApi(
      "/api/Role",
      "DELETE",
      pathParams,
      queryParams,
      headerParams,
      formParams,
      postBody,
      authNames,
      contentTypes,
      accepts,
      returnType,
      callbackRequest,
      callback,
      setErrorMess,
      setOpenErrorAlert
    );
  }
  /**
     * Callback function to receive the result of the apiRoleGet operation.
     * @callback moduleapi/RoleApi~apiRoleGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetRoleDto>{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

  /**
     * @param {module:api/RoleApi~apiRoleGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
  apiRoleGet(opts, callbackRequest, callback, setErrorMess, setOpenErrorAlert) {
    let postBody = null;

    let pathParams = {};
    let queryParams = {};
    let headerParams = {};
    let formParams = {};

    let authNames = [];
    let contentTypes = [];
    let accepts = ["text/plain", "application/json", "text/json"];
    let returnType = [GetRoleDto];

    return this.apiClient.callApi(
      "/api/Role",
      "GET",
      pathParams,
      queryParams,
      headerParams,
      formParams,
      postBody,
      authNames,
      contentTypes,
      accepts,
      returnType,
      callbackRequest,
      callback,
      setErrorMess,
      setOpenErrorAlert
    );
  }
  /**
     * Callback function to receive the result of the apiRolePost operation.
     * @callback moduleapi/RoleApi~apiRolePostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

  /**
     * @param {Object} opts Optional parameters
     * @param {module:model/PostRoleDto} opts.body 
     * @param {module:api/RoleApi~apiRolePostCallback} callback The callback function, accepting three arguments: error, data, response
     */
  apiRolePost(
    opts,
    callbackRequest,
    callback,
    setErrorMess,
    setOpenErrorAlert
  ) {
    opts = opts || {};
    let postBody = opts["body"];

    let pathParams = {};
    let queryParams = {};
    let headerParams = {};
    let formParams = {};

    let authNames = [];
    let contentTypes = ["application/json", "text/json", "application/_*+json"];
    let accepts = [];
    let returnType = null;

    return this.apiClient.callApi(
      "/api/Role",
      "POST",
      pathParams,
      queryParams,
      headerParams,
      formParams,
      postBody,
      authNames,
      contentTypes,
      accepts,
      returnType,
      callbackRequest,
      callback,
      setErrorMess,
      setOpenErrorAlert
    );
  }
  /**
     * Callback function to receive the result of the apiRolePut operation.
     * @callback moduleapi/RoleApi~apiRolePutCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

  /**
     * @param {Object} opts Optional parameters
     * @param {module:model/PutRoleDto} opts.body 
     * @param {module:api/RoleApi~apiRolePutCallback} callback The callback function, accepting three arguments: error, data, response
     */
  apiRolePut(opts, callbackRequest, callback, setErrorMess, setOpenErrorAlert) {
    opts = opts || {};
    let postBody = opts["body"];

    let pathParams = {};
    let queryParams = {};
    let headerParams = {};
    let formParams = {};

    let authNames = [];
    let contentTypes = ["application/json", "text/json", "application/_*+json"];
    let accepts = [];
    let returnType = null;

    return this.apiClient.callApi(
      "/api/Role",
      "PUT",
      pathParams,
      queryParams,
      headerParams,
      formParams,
      postBody,
      authNames,
      contentTypes,
      accepts,
      returnType,
      callbackRequest,
      callback,
      setErrorMess,
      setOpenErrorAlert
    );
  }
}
